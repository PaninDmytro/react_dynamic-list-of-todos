{"version":3,"sources":["types/SortedBy.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FILTEREDBY","TodoList","todos","onSelectedTodo","selectedTodoId","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","setQuery","query","setFilterBy","filterBy","value","onChange","e","target","Object","keys","placeholder","event","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","setSelectedTodo","useState","user","setUser","loading","setLoading","useEffect","userId","finally","href","email","name","App","setTodos","selectedTodo","filteredTodos","copieTodos","All","Active","filter","Completed","normalizedquery","trim","toLowerCase","includes","getFilteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16034785.chunk.js","sourcesContent":["export enum FILTEREDBY {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import cn from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  onSelectedTodo: (todo: Todo | null) => void,\n  selectedTodoId: number,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSelectedTodo,\n  selectedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={cn({\n            'has-background-info-light': selectedTodoId === todo.id,\n          })}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={cn({\n              'has-text-success': todo.completed,\n              'has-text-danger': !todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                onSelectedTodo(todo);\n              }}\n            >\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i\n                  id=\"eyeButton\"\n                  className={cn('far', {\n                    'fa-eye-slash': selectedTodoId === todo.id,\n                    'fa-eye': selectedTodoId !== todo.id,\n                  })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { FILTEREDBY } from '../../types/SortedBy';\n\ninterface Props {\n  setQuery: (text: string) => void,\n  query: string,\n  setFilterBy: (type: string) => void,\n  filterBy: string,\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  setQuery,\n  query,\n  setFilterBy,\n  filterBy,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filterBy}\n          onChange={(e) => setFilterBy(e.target.value)}\n        >\n          {Object.keys(FILTEREDBY).map(type => (\n            <option\n              value={FILTEREDBY[type as keyof typeof FILTEREDBY]}\n              key={type}\n            >\n              {type}\n            </option>\n          ))}\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        value={query}\n        className=\"input\"\n        placeholder=\"Search...\"\n        onChange={(event) => {\n          setQuery(event.target.value);\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query && (\n          /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface Props {\n  todo: Todo;\n  setSelectedTodo: (todo: null) => void,\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(setUser)\n      .finally(() => setLoading(false));\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { FILTEREDBY } from './types/SortedBy';\n\ntype Props = {\n  query: string,\n  filterBy: string,\n};\n\nfunction getFilteredTodos(todos: Todo[], { query, filterBy }: Props): Todo[] {\n  let copieTodos = [...todos];\n\n  if (filterBy) {\n    switch (filterBy) {\n      case FILTEREDBY.All:\n        break;\n      case FILTEREDBY.Active:\n        copieTodos = copieTodos.filter(todo => !todo.completed);\n        break;\n      case FILTEREDBY.Completed:\n        copieTodos = copieTodos.filter(todo => todo.completed);\n        break;\n      default:\n        break;\n    }\n  }\n\n  if (query) {\n    const normalizedquery = query.trim().toLowerCase();\n\n    copieTodos = copieTodos.filter(\n      todo => todo.title.toLowerCase().includes(normalizedquery),\n    ) || null;\n\n    return copieTodos;\n  }\n\n  return copieTodos;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [filterBy, setFilterBy] = useState('');\n\n  const filteredTodos = getFilteredTodos(todos, { query, filterBy });\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setQuery={setQuery}\n                query={query}\n                setFilterBy={setFilterBy}\n                filterBy={filterBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading\n                ? (<Loader />)\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    onSelectedTodo={setSelectedTodo}\n                    selectedTodoId={selectedTodo?.id ?? 0}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}